/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 06 15:58:19 GMT 2021
 */

package main;

import org.junit.Test;
import static org.junit.Assert.*;
import main.Account;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Account_ESTest extends Account_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.update(36500);
      assertTrue(boolean0);
      
      int int0 = account0.estimatedInterest(1240);
      assertEquals(2480, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Account account0 = new Account();
      account0.balance = (-5000);
      boolean boolean0 = account0.undoUpdate(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.update((-5000));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Account account0 = new Account();
      account0.interest = (-1634);
      int int0 = account0.estimatedInterest(940);
      assertEquals((-1634), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Account account0 = new Account();
      int int0 = account0.calculateInterest();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.update(36500);
      assertTrue(boolean0);
      
      int int0 = account0.calculateInterest();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Account account0 = new Account();
      account0.balance = 645;
      account0.balance = (-34376);
      int int0 = account0.calculateInterest();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.undoUpdate(36500);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.undoUpdate((-32));
      boolean boolean1 = account0.credit(0);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.update((-5644));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.credit(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Account account0 = new Account();
      boolean boolean0 = account0.credit(36500);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Account account0 = new Account();
      int int0 = account0.estimatedInterest(0);
      assertEquals(0, int0);
  }
}
